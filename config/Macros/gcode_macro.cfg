[gcode_macro TURNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[delayed_gcode wait_temp]
# initial_duration: 2.
gcode:
  {% set cur_temp = printer.extruder.temperature %}
  {% if cur_temp|int < 40 %}
    WAIT_TEMP_END
  {% else %}
    UPDATE_DELAYED_GCODE ID=wait_temp DURATION=5
  {% endif %}

[gcode_macro WAIT_TEMP_START]
gcode:
  {action_respond_info("wait temp start\n")}
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=1
  M106 P0 S255
  # M106 P2 S255

[gcode_macro WAIT_TEMP_END]
gcode:
  {action_respond_info("wait temp end\n")}
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=0
  M106 P0 S0
  # M106 P2 S0

[gcode_macro END_PRINT_POINT]
gcode:
  # Сохраняем состояние (скорость, абсолютные/относительные координаты)
  SAVE_GCODE_STATE NAME=END_PRINT_state

  {% if "xyz" in printer.toolhead.homed_axes %}
    {% set E = printer["gcode_macro PAUSE"].retraction|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    # Безопасный подъем: либо 10 мм, либо до верха, если места мало
    {% set z_safe = [40, max_z - act_z]|min %}
    # Парковочные координаты
    {% set x_park = printer.toolhead.axis_maximum.x - 10 %}
    {% set y_park = printer.toolhead.axis_maximum.y - 10 %}

    # Устанавливаем относительные координаты для движений
    G91
    
    # Делаем ретракт, если сопло горячее
    {% if printer.extruder.temperature > printer.configfile.settings.extruder.min_extrude_temp %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Сопло холодное, ретракт пропущен.")}
    {% endif %}

    # Поднимаем сопло и отводим в сторону
    G0 Z{z_safe} F900
    G90
    G0 X{x_park} Y{y_park} F15000
    
  {% else %}
    {action_respond_info("END_PRINT_POINT: оси не припаркованы, движение невозможно.")}
  {% endif %}
  
  # Восстанавливаем сохраненное состояние
  RESTORE_GCODE_STATE NAME=END_PRINT_state

[gcode_macro END_PRINT]
description: Правильное завершение печати
gcode:
  # 1. Сначала поднимаем сопло и отводим его в сторону.
  # Это наш пользовательский макрос, который делает всю "грязную" работу,
  # пока сопло еще горячее.
  END_PRINT_POINT

  # 2. Теперь, когда сопло в безопасности, выключаем ВСЕ.
  TURN_OFF_HEATERS    ; Выключить нагреватель сопла и стола
  M107                ; Выключить вентилятор обдува детали
  M84                 ; Выключить все шаговые двигатели

  # 3. Устанавливаем статус "Готов" или "Завершено"
  {action_respond_info("Печать завершена! Принтер остывает.")}
  # Если у вас есть ЖК-экран, можно вывести сообщение:
  M117 Print Complete!


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_retraction: 0.75
gcode:
  {% set E = printer["gcode_macro PAUSE"].retraction|float %}
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  
  {% if act_z < 48.0 %}
    {% set z_safe = 50.0 - act_z %}
  {% elif act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% elif act_z < max_z %}
    {% set z_safe = max_z - act_z %}
  {% else %}
    {% set z_safe = 0.0 %}
  {% endif %}
  
  PAUSE_BASE
  G91
  {% if "xyz" in printer.toolhead.homed_axes %}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1.0 F180
      G1 E-{E} F4000
    {% else %}
      {action_respond_info("Extruder is not hot enough")}
    {% endif %}
    G0 Z{z_safe} F600
    M400
    G90
    G0 X{x_park} Y{y_park} F12000
  {% else %}
    {action_respond_info("Toolhead is not homed")}
  {% endif %}

  # Проверяем, существует ли 'aux_fan', и только потом сохраняем его скорость.
  {% if 'aux_fan' in printer.configfile.settings['fan_generic'] %}
    SAVE_VARIABLE VARIABLE=aux_fan_speed VALUE={printer['fan_generic aux_fan'].speed}
    M107 P2 ; Выключаем aux_fan, так как он существует
  {% else %}
    # Если вентилятора нет, просто сохраняем 0, чтобы макрос RESUME не выдал ошибку.
    SAVE_VARIABLE VARIABLE=aux_fan_speed VALUE=0
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set side_fan_speed = printer.save_variables.variables.aux_fan_speed|default(0)|float %}
  {% set E = printer["gcode_macro PAUSE"].retraction|float + 1.0 %}
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}

  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
    G90
  {% else %}
    {action_respond_info("Extruder is not hot enough")}
  {% endif %}
  M400
  
  # Проверяем, существует ли 'aux_fan', и только потом устанавливаем его скорость.
  {% if 'aux_fan' in printer.configfile.settings['fan_generic'] %}
    SET_FAN_SPEED FAN=aux_fan SPEED={side_fan_speed}
  {% endif %}

  # Очищаем сохраненную переменную в любом случае
  SAVE_VARIABLE VARIABLE=aux_fan_speed VALUE=0
  
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SAVE_VARIABLE VARIABLE=safe_bed_temp VALUE=42.0
  END_PRINT
  CANCEL_PRINT_BASE   