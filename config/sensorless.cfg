[force_move]
enable_force_move: True

[gcode_macro _HOME_Z_FROM_LAST_PROBE]
gcode:
    {% set z_probed = printer.probe.last_z_result %}
    {% set z_position = printer.toolhead.position[2] %}
    {% set z_actual = z_position - z_probed %}
    SET_KINEMATIC_POSITION Z={z_actual}

[gcode_macro _HOME_X]
gcode:
    # --- ДОБАВЛЕННЫЙ БЛОК: Снижение тока для Sensorless Homing ---
    {% set HOME_CURRENT = 0.8 %} # Ток для парковки. Можно настроить (0.5-0.8А).
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # --- Исходная логика парковки ---
    G28 X
    G91
    G0 X-10 F1200
    G90
    G4 P1000      # Wait just a second… (give StallGuard registers time to clear)

    # --- ДОБАВЛЕННЫЙ БЛОК: Восстановление рабочего тока ---
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro _HOME_Y]
gcode:
    # --- ДОБАВЛЕННЫЙ БЛОК: Снижение тока для Sensorless Homing ---
    {% set HOME_CURRENT = 0.8 %} # Ток для парковки. Можно настроить (0.5-0.8А).
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # --- Исходная логика парковки ---
    G28 Y
    G91
    G0 Y+10 F1200
    G90
    G4 P1000

    # --- ДОБАВЛЕННЫЙ БЛОК: Восстановление рабочего тока ---
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    {% set z_config = printer.configfile.settings.stepper_z %}
    
    # Получаем скорость подъема (возврата) из секции [load_cell_probe]
    {% set lift_speed = printer.configfile.settings.load_cell_probe.lift_speed * 60 %}

    # Получить центральные координаты
    {% set x_center = (printer.configfile.settings.stepper_x.position_min + printer.configfile.settings.stepper_x.position_max) / 2 %}
    {% set y_center = (printer.configfile.settings.stepper_y.position_min + printer.configfile.settings.stepper_y.position_max) / 2 %}

    SET_GCODE_OFFSET Z=0  # load cell probes dont need a Z offset
    # position toolhead for homing Z, edit for your printers size
    G90  # absolute move
    G1 X{x_center} Y{y_center} F{150 * 60}  # move to X/Y position for homing

    # "Мягкая" парковка по Z
    SET_KINEMATIC_POSITION Z={printer.toolhead.axis_maximum[2]}

    # Fast approach and tap for the inital homing
    # BAD_TAP_STRATEGY=IGNORE forces the tap to succeed, even if its inaccurate
    PROBE PROBE_SPEED={z_config.homing_speed} BAD_TAP_STRATEGY=RETRY
    _HOME_Z_FROM_LAST_PROBE

    # lift z to 2mm
    G91  # relative move
    G1 Z{z_config.homing_retract_dist} F{z_config.homing_retract_speed * 60}

    # probe at standard speed
    PROBE SPEED={z_config.second_homing_speed}
    _HOME_Z_FROM_LAST_PROBE

    # lift z to 10mm for clearance
    G91  # relative move
    G1 Z10 F{lift_speed}

[homing_override]
axes: xyz
gcode:
  {% set home_all = ('X' not in params) and ('Y' not in params) and ('Z' not in params) %}
  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}