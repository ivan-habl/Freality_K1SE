[force_move]
enable_force_move: True

[gcode_macro _HOME_Z_FROM_LAST_PROBE]
gcode:
    {% set z_probed = printer.probe.last_z_result %}
    {% set z_position = printer.toolhead.position[2] %}
    {% set z_actual = z_position - z_probed %}
    SET_KINEMATIC_POSITION Z={z_actual}

[gcode_macro _HOME_X]
gcode:
    # --- БЛОК УПРАВЛЕНИЯ ТОКОМ ---
    {% set HOME_CURRENT = 0.8 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # --- ЛОГИКА ПАРКОВКИ X ---
    G28 X
    G91
    G0 X-10 F1200
    G90
    G4 P1000

    # --- БЛОК ВОССТАНОВЛЕНИЯ ТОКА ---
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro _HOME_Y]
gcode:
    # --- БЛОК УПРАВЛЕНИЯ ТОКОМ ---
    {% set HOME_CURRENT = 0.8 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # --- ЛОГИКА ПАРКОВКИ Y ---
    G28 Y
    G91
    G0 Y+10 F1200
    G90
    G4 P1000

    # --- БЛОК ВОССТАНОВЛЕНИЯ ТОКА ---
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    ; Читаем настройки шагового двигателя по оси Z из конфигурации
    {% set z_config = printer.configfile.settings.stepper_z %}
    ; Скорость подъёма после зондирования (переводим в мм/мин)
    {% set lift_speed = printer.configfile.settings.load_cell_probe.lift_speed * 60 %}
    ; Центр (для перемещения в середину стола перед зондированием)
    {% set x_center = (printer.configfile.settings.stepper_x.position_min + printer.configfile.settings.stepper_x.position_max) / 2 %}
    {% set y_center = (printer.configfile.settings.stepper_y.position_min + printer.configfile.settings.stepper_y.position_max) / 2 %}

    ; Сбрасываем любой GCODE-сдвиг по Z
    SET_GCODE_OFFSET Z=0
    ; Используем абсолютные координаты
    G90
    ; Перемещаем головку в центр стола на скорости 150 мм/с
    G1 X{x_center} Y{y_center} F{150 * 60}

    ; Устанавливаем кинематическую позицию по Z в максимум (без фактического перемещения)
    SET_KINEMATIC_POSITION Z={printer.toolhead.axis_maximum[2]}

    ; Первое проходное зондирование с стратегией повтора при неудаче
    PROBE PROBE_SPEED={z_config.homing_speed} BAD_TAP_STRATEGY=RETRY
    ; Корректируем нулевую точку Z по результату первого касания
    _HOME_Z_FROM_LAST_PROBE

    # ; Переходим в относительные координаты для подъёма
    # G91
    # ; Поднимаем на заданную дистанцию после зондирования
    # G1 Z{z_config.homing_retract_dist} F{z_config.homing_retract_speed * 60}

    ; Второе, замедленное зондирование для точного определения
    PROBE SPEED={z_config.second_homing_speed}
    ; Снова корректируем нулевую по результату второго касания
    _HOME_Z_FROM_LAST_PROBE

    ; По-прежнему в относительных координатах
    G91
    ; Финальный подъём после зондирования на безопасную высоту
    G1 Z10 F{lift_speed}

[homing_override]
axes: xyz
gcode:
  {% set home_all = ('X' not in params) and ('Y' not in params) and ('Z' not in params) %}

  # Безопасный подъем по оси Z, если она еще не припаркована.
  # Это хорошая практика, оставляем как есть.
  {% if 'z' not in printer.toolhead.homed_axes %}
      {% set SAFE_Z_LIFT = 10 %}
      RESPOND TYPE=command MSG="Ось Z не припаркована. Выполняется безопасный подъем на {SAFE_Z_LIFT} мм."
      
      # Используем SET_KINEMATIC_POSITION вместо G92, чтобы не сбить Z_offset
      SET_KINEMATIC_POSITION Z={SAFE_Z_LIFT}
      G90
      G0 Z{SAFE_Z_LIFT} F600
  {% endif %}

  # --- НОВАЯ УЛУЧШЕННАЯ ЛОГИКА ПАРКОВКИ ---

  # 1. Паркуем X, если запрошено (G28 или G28 X)
  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  # 2. Паркуем Y, если запрошено (G28 или G28 Y)
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  # 3. Паркуем Z, если запрошено (G28 или G28 Z)
  {% if home_all or 'Z' in params %}
    # ПРОВЕРКА: Перед парковкой Z убедимся, что X и Y уже припаркованы.
    {% if 'x' not in printer.toolhead.homed_axes or 'y' not in printer.toolhead.homed_axes %}
      RESPOND TYPE=echo MSG="Оси X и/или Y не припаркованы. Паркуем их перед Z."
      _HOME_X
      _HOME_Y
    {% endif %}
    
    # Теперь, когда X и Y точно припаркованы, можно безопасно выполнять _HOME_Z
    _HOME_Z
  {% endif %}